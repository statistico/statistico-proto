syntax = "proto3";

package statistico;

option go_package = "github.com/statistico/statistico-proto;statistico";

import "enum.proto";
import "filter.proto";
import "requests.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

service StrategyService {
  rpc StrategyTradeSearch(StrategyTradeSearchRequest) returns (stream StrategyTrade) {}
  rpc CreateStrategy(CreateStrategyRequest) returns (Strategy) {}
  rpc ListUserStrategies(ListUserStrategiesRequest) returns (stream Strategy) {}
}

message Strategy {
  string id = 1;
  string name = 2;
  string description = 3;
  string user_id = 4;
  string market = 5;
  string runner = 6;
  google.protobuf.FloatValue min_odds = 7;
  google.protobuf.FloatValue max_odds = 8;
  SideEnum side = 9;
  repeated uint64 competition_ids = 10;
  repeated ResultFilter result_filters = 11;
  repeated StatFilter stat_filters = 12;
  VisibilityEnum visibility = 13;
  google.protobuf.Timestamp created_at = 14;
  google.protobuf.Timestamp updated_at = 15;
}

message StrategyTrade {
  string market_name = 1;
  string runner_name = 2;
  float runner_price = 3;
  SideEnum side = 4;
  uint64 event_id = 5;
  uint64 competition_id = 6;
  uint64 season_id = 7;
  google.protobuf.Timestamp event_date = 8;
  TradeResultEnum result = 9;
}
