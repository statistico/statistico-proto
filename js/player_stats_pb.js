/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
var requests_pb = require('./requests_pb.js');
goog.exportSymbol('proto.statistico.Lineup', null, global);
goog.exportSymbol('proto.statistico.LineupPlayer', null, global);
goog.exportSymbol('proto.statistico.LineupResponse', null, global);
goog.exportSymbol('proto.statistico.PlayerStats', null, global);
goog.exportSymbol('proto.statistico.PlayerStatsResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.statistico.PlayerStatsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.statistico.PlayerStatsResponse.repeatedFields_, null);
};
goog.inherits(proto.statistico.PlayerStatsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.statistico.PlayerStatsResponse.displayName = 'proto.statistico.PlayerStatsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.statistico.PlayerStatsResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.statistico.PlayerStatsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.statistico.PlayerStatsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.statistico.PlayerStatsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.statistico.PlayerStatsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    homeTeamList: jspb.Message.toObjectList(msg.getHomeTeamList(),
    proto.statistico.PlayerStats.toObject, includeInstance),
    awayTeamList: jspb.Message.toObjectList(msg.getAwayTeamList(),
    proto.statistico.PlayerStats.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.statistico.PlayerStatsResponse}
 */
proto.statistico.PlayerStatsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.statistico.PlayerStatsResponse;
  return proto.statistico.PlayerStatsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.statistico.PlayerStatsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.statistico.PlayerStatsResponse}
 */
proto.statistico.PlayerStatsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.statistico.PlayerStats;
      reader.readMessage(value,proto.statistico.PlayerStats.deserializeBinaryFromReader);
      msg.addHomeTeam(value);
      break;
    case 2:
      var value = new proto.statistico.PlayerStats;
      reader.readMessage(value,proto.statistico.PlayerStats.deserializeBinaryFromReader);
      msg.addAwayTeam(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.statistico.PlayerStatsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.statistico.PlayerStatsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.statistico.PlayerStatsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.statistico.PlayerStatsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHomeTeamList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.statistico.PlayerStats.serializeBinaryToWriter
    );
  }
  f = message.getAwayTeamList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.statistico.PlayerStats.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PlayerStats home_team = 1;
 * @return {!Array<!proto.statistico.PlayerStats>}
 */
proto.statistico.PlayerStatsResponse.prototype.getHomeTeamList = function() {
  return /** @type{!Array<!proto.statistico.PlayerStats>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.statistico.PlayerStats, 1));
};


/** @param {!Array<!proto.statistico.PlayerStats>} value */
proto.statistico.PlayerStatsResponse.prototype.setHomeTeamList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.statistico.PlayerStats=} opt_value
 * @param {number=} opt_index
 * @return {!proto.statistico.PlayerStats}
 */
proto.statistico.PlayerStatsResponse.prototype.addHomeTeam = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.statistico.PlayerStats, opt_index);
};


proto.statistico.PlayerStatsResponse.prototype.clearHomeTeamList = function() {
  this.setHomeTeamList([]);
};


/**
 * repeated PlayerStats away_team = 2;
 * @return {!Array<!proto.statistico.PlayerStats>}
 */
proto.statistico.PlayerStatsResponse.prototype.getAwayTeamList = function() {
  return /** @type{!Array<!proto.statistico.PlayerStats>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.statistico.PlayerStats, 2));
};


/** @param {!Array<!proto.statistico.PlayerStats>} value */
proto.statistico.PlayerStatsResponse.prototype.setAwayTeamList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.statistico.PlayerStats=} opt_value
 * @param {number=} opt_index
 * @return {!proto.statistico.PlayerStats}
 */
proto.statistico.PlayerStatsResponse.prototype.addAwayTeam = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.statistico.PlayerStats, opt_index);
};


proto.statistico.PlayerStatsResponse.prototype.clearAwayTeamList = function() {
  this.setAwayTeamList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.statistico.LineupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.statistico.LineupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.statistico.LineupResponse.displayName = 'proto.statistico.LineupResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.statistico.LineupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.statistico.LineupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.statistico.LineupResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.statistico.LineupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    homeTeam: (f = msg.getHomeTeam()) && proto.statistico.Lineup.toObject(includeInstance, f),
    awayTeam: (f = msg.getAwayTeam()) && proto.statistico.Lineup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.statistico.LineupResponse}
 */
proto.statistico.LineupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.statistico.LineupResponse;
  return proto.statistico.LineupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.statistico.LineupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.statistico.LineupResponse}
 */
proto.statistico.LineupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.statistico.Lineup;
      reader.readMessage(value,proto.statistico.Lineup.deserializeBinaryFromReader);
      msg.setHomeTeam(value);
      break;
    case 2:
      var value = new proto.statistico.Lineup;
      reader.readMessage(value,proto.statistico.Lineup.deserializeBinaryFromReader);
      msg.setAwayTeam(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.statistico.LineupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.statistico.LineupResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.statistico.LineupResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.statistico.LineupResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHomeTeam();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.statistico.Lineup.serializeBinaryToWriter
    );
  }
  f = message.getAwayTeam();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.statistico.Lineup.serializeBinaryToWriter
    );
  }
};


/**
 * optional Lineup home_team = 1;
 * @return {?proto.statistico.Lineup}
 */
proto.statistico.LineupResponse.prototype.getHomeTeam = function() {
  return /** @type{?proto.statistico.Lineup} */ (
    jspb.Message.getWrapperField(this, proto.statistico.Lineup, 1));
};


/** @param {?proto.statistico.Lineup|undefined} value */
proto.statistico.LineupResponse.prototype.setHomeTeam = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.statistico.LineupResponse.prototype.clearHomeTeam = function() {
  this.setHomeTeam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.statistico.LineupResponse.prototype.hasHomeTeam = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Lineup away_team = 2;
 * @return {?proto.statistico.Lineup}
 */
proto.statistico.LineupResponse.prototype.getAwayTeam = function() {
  return /** @type{?proto.statistico.Lineup} */ (
    jspb.Message.getWrapperField(this, proto.statistico.Lineup, 2));
};


/** @param {?proto.statistico.Lineup|undefined} value */
proto.statistico.LineupResponse.prototype.setAwayTeam = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.statistico.LineupResponse.prototype.clearAwayTeam = function() {
  this.setAwayTeam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.statistico.LineupResponse.prototype.hasAwayTeam = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.statistico.PlayerStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.statistico.PlayerStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.statistico.PlayerStats.displayName = 'proto.statistico.PlayerStats';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.statistico.PlayerStats.prototype.toObject = function(opt_includeInstance) {
  return proto.statistico.PlayerStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.statistico.PlayerStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.statistico.PlayerStats.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    shotsTotal: (f = msg.getShotsTotal()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    shotsOnGoal: (f = msg.getShotsOnGoal()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    goalsScored: (f = msg.getGoalsScored()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    goalsConceded: (f = msg.getGoalsConceded()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    assists: (f = msg.getAssists()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.statistico.PlayerStats}
 */
proto.statistico.PlayerStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.statistico.PlayerStats;
  return proto.statistico.PlayerStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.statistico.PlayerStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.statistico.PlayerStats}
 */
proto.statistico.PlayerStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPlayerId(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setShotsTotal(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setShotsOnGoal(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setGoalsScored(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setGoalsConceded(value);
      break;
    case 6:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setAssists(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.statistico.PlayerStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.statistico.PlayerStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.statistico.PlayerStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.statistico.PlayerStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getShotsTotal();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getShotsOnGoal();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getGoalsScored();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getGoalsConceded();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getAssists();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 player_id = 1;
 * @return {number}
 */
proto.statistico.PlayerStats.prototype.getPlayerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.statistico.PlayerStats.prototype.setPlayerId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Int32Value shots_total = 2;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.statistico.PlayerStats.prototype.getShotsTotal = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 2));
};


/** @param {?proto.google.protobuf.Int32Value|undefined} value */
proto.statistico.PlayerStats.prototype.setShotsTotal = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.statistico.PlayerStats.prototype.clearShotsTotal = function() {
  this.setShotsTotal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.statistico.PlayerStats.prototype.hasShotsTotal = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Int32Value shots_on_goal = 3;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.statistico.PlayerStats.prototype.getShotsOnGoal = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 3));
};


/** @param {?proto.google.protobuf.Int32Value|undefined} value */
proto.statistico.PlayerStats.prototype.setShotsOnGoal = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.statistico.PlayerStats.prototype.clearShotsOnGoal = function() {
  this.setShotsOnGoal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.statistico.PlayerStats.prototype.hasShotsOnGoal = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Int32Value goals_scored = 4;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.statistico.PlayerStats.prototype.getGoalsScored = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 4));
};


/** @param {?proto.google.protobuf.Int32Value|undefined} value */
proto.statistico.PlayerStats.prototype.setGoalsScored = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.statistico.PlayerStats.prototype.clearGoalsScored = function() {
  this.setGoalsScored(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.statistico.PlayerStats.prototype.hasGoalsScored = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Int32Value goals_conceded = 5;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.statistico.PlayerStats.prototype.getGoalsConceded = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 5));
};


/** @param {?proto.google.protobuf.Int32Value|undefined} value */
proto.statistico.PlayerStats.prototype.setGoalsConceded = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.statistico.PlayerStats.prototype.clearGoalsConceded = function() {
  this.setGoalsConceded(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.statistico.PlayerStats.prototype.hasGoalsConceded = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Int32Value assists = 6;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.statistico.PlayerStats.prototype.getAssists = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 6));
};


/** @param {?proto.google.protobuf.Int32Value|undefined} value */
proto.statistico.PlayerStats.prototype.setAssists = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.statistico.PlayerStats.prototype.clearAssists = function() {
  this.setAssists(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.statistico.PlayerStats.prototype.hasAssists = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.statistico.Lineup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.statistico.Lineup.repeatedFields_, null);
};
goog.inherits(proto.statistico.Lineup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.statistico.Lineup.displayName = 'proto.statistico.Lineup';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.statistico.Lineup.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.statistico.Lineup.prototype.toObject = function(opt_includeInstance) {
  return proto.statistico.Lineup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.statistico.Lineup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.statistico.Lineup.toObject = function(includeInstance, msg) {
  var f, obj = {
    startList: jspb.Message.toObjectList(msg.getStartList(),
    proto.statistico.LineupPlayer.toObject, includeInstance),
    benchList: jspb.Message.toObjectList(msg.getBenchList(),
    proto.statistico.LineupPlayer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.statistico.Lineup}
 */
proto.statistico.Lineup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.statistico.Lineup;
  return proto.statistico.Lineup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.statistico.Lineup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.statistico.Lineup}
 */
proto.statistico.Lineup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.statistico.LineupPlayer;
      reader.readMessage(value,proto.statistico.LineupPlayer.deserializeBinaryFromReader);
      msg.addStart(value);
      break;
    case 2:
      var value = new proto.statistico.LineupPlayer;
      reader.readMessage(value,proto.statistico.LineupPlayer.deserializeBinaryFromReader);
      msg.addBench(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.statistico.Lineup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.statistico.Lineup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.statistico.Lineup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.statistico.Lineup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.statistico.LineupPlayer.serializeBinaryToWriter
    );
  }
  f = message.getBenchList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.statistico.LineupPlayer.serializeBinaryToWriter
    );
  }
};


/**
 * repeated LineupPlayer start = 1;
 * @return {!Array<!proto.statistico.LineupPlayer>}
 */
proto.statistico.Lineup.prototype.getStartList = function() {
  return /** @type{!Array<!proto.statistico.LineupPlayer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.statistico.LineupPlayer, 1));
};


/** @param {!Array<!proto.statistico.LineupPlayer>} value */
proto.statistico.Lineup.prototype.setStartList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.statistico.LineupPlayer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.statistico.LineupPlayer}
 */
proto.statistico.Lineup.prototype.addStart = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.statistico.LineupPlayer, opt_index);
};


proto.statistico.Lineup.prototype.clearStartList = function() {
  this.setStartList([]);
};


/**
 * repeated LineupPlayer bench = 2;
 * @return {!Array<!proto.statistico.LineupPlayer>}
 */
proto.statistico.Lineup.prototype.getBenchList = function() {
  return /** @type{!Array<!proto.statistico.LineupPlayer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.statistico.LineupPlayer, 2));
};


/** @param {!Array<!proto.statistico.LineupPlayer>} value */
proto.statistico.Lineup.prototype.setBenchList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.statistico.LineupPlayer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.statistico.LineupPlayer}
 */
proto.statistico.Lineup.prototype.addBench = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.statistico.LineupPlayer, opt_index);
};


proto.statistico.Lineup.prototype.clearBenchList = function() {
  this.setBenchList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.statistico.LineupPlayer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.statistico.LineupPlayer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.statistico.LineupPlayer.displayName = 'proto.statistico.LineupPlayer';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.statistico.LineupPlayer.prototype.toObject = function(opt_includeInstance) {
  return proto.statistico.LineupPlayer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.statistico.LineupPlayer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.statistico.LineupPlayer.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    position: jspb.Message.getFieldWithDefault(msg, 2, ""),
    formationPosition: (f = msg.getFormationPosition()) && google_protobuf_wrappers_pb.UInt32Value.toObject(includeInstance, f),
    isSubstitute: jspb.Message.getFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.statistico.LineupPlayer}
 */
proto.statistico.LineupPlayer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.statistico.LineupPlayer;
  return proto.statistico.LineupPlayer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.statistico.LineupPlayer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.statistico.LineupPlayer}
 */
proto.statistico.LineupPlayer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPlayerId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPosition(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.UInt32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt32Value.deserializeBinaryFromReader);
      msg.setFormationPosition(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSubstitute(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.statistico.LineupPlayer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.statistico.LineupPlayer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.statistico.LineupPlayer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.statistico.LineupPlayer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getPosition();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFormationPosition();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getIsSubstitute();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional uint64 player_id = 1;
 * @return {number}
 */
proto.statistico.LineupPlayer.prototype.getPlayerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.statistico.LineupPlayer.prototype.setPlayerId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string position = 2;
 * @return {string}
 */
proto.statistico.LineupPlayer.prototype.getPosition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.statistico.LineupPlayer.prototype.setPosition = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.UInt32Value formation_position = 3;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.statistico.LineupPlayer.prototype.getFormationPosition = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt32Value, 3));
};


/** @param {?proto.google.protobuf.UInt32Value|undefined} value */
proto.statistico.LineupPlayer.prototype.setFormationPosition = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.statistico.LineupPlayer.prototype.clearFormationPosition = function() {
  this.setFormationPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.statistico.LineupPlayer.prototype.hasFormationPosition = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool is_substitute = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.statistico.LineupPlayer.prototype.getIsSubstitute = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.statistico.LineupPlayer.prototype.setIsSubstitute = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


goog.object.extend(exports, proto.statistico);
