// @generated by protobuf-ts 2.9.0
// @generated from protobuf file "result.proto" (package "statistico", syntax proto3)
// tslint:disable
import { TeamResultRequest } from "./requests";
import { SeasonRequest } from "./requests";
import { HistoricalResultRequest } from "./requests";
import { ResultRequest } from "./requests";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { UInt32Value } from "./google/protobuf/wrappers";
import { StringValue } from "./google/protobuf/wrappers";
import { TeamStats } from "./team_stats";
import { Date } from "./common";
import { Venue } from "./venue";
import { Round } from "./round";
import { Season } from "./season";
import { Team } from "./team";
/**
 * @generated from protobuf message statistico.Result
 */
export interface Result {
    /**
     * @generated from protobuf field: uint64 id = 1;
     */
    id: bigint;
    /**
     * @generated from protobuf field: statistico.Team home_team = 2;
     */
    homeTeam?: Team;
    /**
     * @generated from protobuf field: statistico.Team away_team = 3;
     */
    awayTeam?: Team;
    /**
     * @generated from protobuf field: statistico.Season season = 4;
     */
    season?: Season;
    /**
     * @generated from protobuf field: statistico.Round round = 5;
     */
    round?: Round;
    /**
     * @generated from protobuf field: statistico.Venue venue = 6;
     */
    venue?: Venue;
    /**
     * @generated from protobuf field: statistico.Date date_time = 7;
     */
    dateTime?: Date;
    /**
     * @generated from protobuf field: statistico.MatchStats stats = 8;
     */
    stats?: MatchStats;
    /**
     * @generated from protobuf field: statistico.TeamStats home_team_stats = 9;
     */
    homeTeamStats?: TeamStats;
    /**
     * @generated from protobuf field: statistico.TeamStats away_team_stats = 10;
     */
    awayTeamStats?: TeamStats;
}
/**
 * @generated from protobuf message statistico.MatchStats
 */
export interface MatchStats {
    /**
     * @generated from protobuf field: google.protobuf.StringValue pitch = 1;
     */
    pitch?: StringValue;
    /**
     * @generated from protobuf field: google.protobuf.StringValue home_formation = 2;
     */
    homeFormation?: StringValue;
    /**
     * @generated from protobuf field: google.protobuf.StringValue away_formation = 3;
     */
    awayFormation?: StringValue;
    /**
     * @generated from protobuf field: google.protobuf.UInt32Value home_score = 4;
     */
    homeScore?: UInt32Value;
    /**
     * @generated from protobuf field: google.protobuf.UInt32Value away_score = 5;
     */
    awayScore?: UInt32Value;
    /**
     * @generated from protobuf field: google.protobuf.UInt32Value home_pen_score = 6;
     */
    homePenScore?: UInt32Value;
    /**
     * @generated from protobuf field: google.protobuf.UInt32Value away_pen_score = 7;
     */
    awayPenScore?: UInt32Value;
    /**
     * @generated from protobuf field: google.protobuf.StringValue half_time_score = 8;
     */
    halfTimeScore?: StringValue;
    /**
     * @generated from protobuf field: google.protobuf.StringValue full_time_score = 9;
     */
    fullTimeScore?: StringValue;
    /**
     * @generated from protobuf field: google.protobuf.StringValue extra_time_score = 10;
     */
    extraTimeScore?: StringValue;
    /**
     * @generated from protobuf field: google.protobuf.UInt32Value home_league_position = 11;
     */
    homeLeaguePosition?: UInt32Value;
    /**
     * @generated from protobuf field: google.protobuf.UInt32Value away_league_position = 12;
     */
    awayLeaguePosition?: UInt32Value;
    /**
     * @generated from protobuf field: google.protobuf.UInt32Value minutes = 13;
     */
    minutes?: UInt32Value;
    /**
     * @generated from protobuf field: google.protobuf.UInt32Value added_time = 15;
     */
    addedTime?: UInt32Value;
    /**
     * @generated from protobuf field: google.protobuf.UInt32Value extra_time = 16;
     */
    extraTime?: UInt32Value;
    /**
     * @generated from protobuf field: google.protobuf.UInt32Value injury_time = 17;
     */
    injuryTime?: UInt32Value;
}
// @generated message type with reflection information, may provide speed optimized methods
class Result$Type extends MessageType<Result> {
    constructor() {
        super("statistico.Result", [
            { no: 1, name: "id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "home_team", kind: "message", T: () => Team },
            { no: 3, name: "away_team", kind: "message", T: () => Team },
            { no: 4, name: "season", kind: "message", T: () => Season },
            { no: 5, name: "round", kind: "message", T: () => Round },
            { no: 6, name: "venue", kind: "message", T: () => Venue },
            { no: 7, name: "date_time", kind: "message", T: () => Date },
            { no: 8, name: "stats", kind: "message", T: () => MatchStats },
            { no: 9, name: "home_team_stats", kind: "message", T: () => TeamStats },
            { no: 10, name: "away_team_stats", kind: "message", T: () => TeamStats }
        ]);
    }
    create(value?: PartialMessage<Result>): Result {
        const message = { id: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Result>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Result): Result {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint64 id */ 1:
                    message.id = reader.uint64().toBigInt();
                    break;
                case /* statistico.Team home_team */ 2:
                    message.homeTeam = Team.internalBinaryRead(reader, reader.uint32(), options, message.homeTeam);
                    break;
                case /* statistico.Team away_team */ 3:
                    message.awayTeam = Team.internalBinaryRead(reader, reader.uint32(), options, message.awayTeam);
                    break;
                case /* statistico.Season season */ 4:
                    message.season = Season.internalBinaryRead(reader, reader.uint32(), options, message.season);
                    break;
                case /* statistico.Round round */ 5:
                    message.round = Round.internalBinaryRead(reader, reader.uint32(), options, message.round);
                    break;
                case /* statistico.Venue venue */ 6:
                    message.venue = Venue.internalBinaryRead(reader, reader.uint32(), options, message.venue);
                    break;
                case /* statistico.Date date_time */ 7:
                    message.dateTime = Date.internalBinaryRead(reader, reader.uint32(), options, message.dateTime);
                    break;
                case /* statistico.MatchStats stats */ 8:
                    message.stats = MatchStats.internalBinaryRead(reader, reader.uint32(), options, message.stats);
                    break;
                case /* statistico.TeamStats home_team_stats */ 9:
                    message.homeTeamStats = TeamStats.internalBinaryRead(reader, reader.uint32(), options, message.homeTeamStats);
                    break;
                case /* statistico.TeamStats away_team_stats */ 10:
                    message.awayTeamStats = TeamStats.internalBinaryRead(reader, reader.uint32(), options, message.awayTeamStats);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Result, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint64 id = 1; */
        if (message.id !== 0n)
            writer.tag(1, WireType.Varint).uint64(message.id);
        /* statistico.Team home_team = 2; */
        if (message.homeTeam)
            Team.internalBinaryWrite(message.homeTeam, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* statistico.Team away_team = 3; */
        if (message.awayTeam)
            Team.internalBinaryWrite(message.awayTeam, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* statistico.Season season = 4; */
        if (message.season)
            Season.internalBinaryWrite(message.season, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* statistico.Round round = 5; */
        if (message.round)
            Round.internalBinaryWrite(message.round, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* statistico.Venue venue = 6; */
        if (message.venue)
            Venue.internalBinaryWrite(message.venue, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* statistico.Date date_time = 7; */
        if (message.dateTime)
            Date.internalBinaryWrite(message.dateTime, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* statistico.MatchStats stats = 8; */
        if (message.stats)
            MatchStats.internalBinaryWrite(message.stats, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* statistico.TeamStats home_team_stats = 9; */
        if (message.homeTeamStats)
            TeamStats.internalBinaryWrite(message.homeTeamStats, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* statistico.TeamStats away_team_stats = 10; */
        if (message.awayTeamStats)
            TeamStats.internalBinaryWrite(message.awayTeamStats, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message statistico.Result
 */
export const Result = new Result$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MatchStats$Type extends MessageType<MatchStats> {
    constructor() {
        super("statistico.MatchStats", [
            { no: 1, name: "pitch", kind: "message", T: () => StringValue },
            { no: 2, name: "home_formation", kind: "message", T: () => StringValue },
            { no: 3, name: "away_formation", kind: "message", T: () => StringValue },
            { no: 4, name: "home_score", kind: "message", T: () => UInt32Value },
            { no: 5, name: "away_score", kind: "message", T: () => UInt32Value },
            { no: 6, name: "home_pen_score", kind: "message", T: () => UInt32Value },
            { no: 7, name: "away_pen_score", kind: "message", T: () => UInt32Value },
            { no: 8, name: "half_time_score", kind: "message", T: () => StringValue },
            { no: 9, name: "full_time_score", kind: "message", T: () => StringValue },
            { no: 10, name: "extra_time_score", kind: "message", T: () => StringValue },
            { no: 11, name: "home_league_position", kind: "message", T: () => UInt32Value },
            { no: 12, name: "away_league_position", kind: "message", T: () => UInt32Value },
            { no: 13, name: "minutes", kind: "message", T: () => UInt32Value },
            { no: 15, name: "added_time", kind: "message", T: () => UInt32Value },
            { no: 16, name: "extra_time", kind: "message", T: () => UInt32Value },
            { no: 17, name: "injury_time", kind: "message", T: () => UInt32Value }
        ]);
    }
    create(value?: PartialMessage<MatchStats>): MatchStats {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MatchStats>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MatchStats): MatchStats {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.StringValue pitch */ 1:
                    message.pitch = StringValue.internalBinaryRead(reader, reader.uint32(), options, message.pitch);
                    break;
                case /* google.protobuf.StringValue home_formation */ 2:
                    message.homeFormation = StringValue.internalBinaryRead(reader, reader.uint32(), options, message.homeFormation);
                    break;
                case /* google.protobuf.StringValue away_formation */ 3:
                    message.awayFormation = StringValue.internalBinaryRead(reader, reader.uint32(), options, message.awayFormation);
                    break;
                case /* google.protobuf.UInt32Value home_score */ 4:
                    message.homeScore = UInt32Value.internalBinaryRead(reader, reader.uint32(), options, message.homeScore);
                    break;
                case /* google.protobuf.UInt32Value away_score */ 5:
                    message.awayScore = UInt32Value.internalBinaryRead(reader, reader.uint32(), options, message.awayScore);
                    break;
                case /* google.protobuf.UInt32Value home_pen_score */ 6:
                    message.homePenScore = UInt32Value.internalBinaryRead(reader, reader.uint32(), options, message.homePenScore);
                    break;
                case /* google.protobuf.UInt32Value away_pen_score */ 7:
                    message.awayPenScore = UInt32Value.internalBinaryRead(reader, reader.uint32(), options, message.awayPenScore);
                    break;
                case /* google.protobuf.StringValue half_time_score */ 8:
                    message.halfTimeScore = StringValue.internalBinaryRead(reader, reader.uint32(), options, message.halfTimeScore);
                    break;
                case /* google.protobuf.StringValue full_time_score */ 9:
                    message.fullTimeScore = StringValue.internalBinaryRead(reader, reader.uint32(), options, message.fullTimeScore);
                    break;
                case /* google.protobuf.StringValue extra_time_score */ 10:
                    message.extraTimeScore = StringValue.internalBinaryRead(reader, reader.uint32(), options, message.extraTimeScore);
                    break;
                case /* google.protobuf.UInt32Value home_league_position */ 11:
                    message.homeLeaguePosition = UInt32Value.internalBinaryRead(reader, reader.uint32(), options, message.homeLeaguePosition);
                    break;
                case /* google.protobuf.UInt32Value away_league_position */ 12:
                    message.awayLeaguePosition = UInt32Value.internalBinaryRead(reader, reader.uint32(), options, message.awayLeaguePosition);
                    break;
                case /* google.protobuf.UInt32Value minutes */ 13:
                    message.minutes = UInt32Value.internalBinaryRead(reader, reader.uint32(), options, message.minutes);
                    break;
                case /* google.protobuf.UInt32Value added_time */ 15:
                    message.addedTime = UInt32Value.internalBinaryRead(reader, reader.uint32(), options, message.addedTime);
                    break;
                case /* google.protobuf.UInt32Value extra_time */ 16:
                    message.extraTime = UInt32Value.internalBinaryRead(reader, reader.uint32(), options, message.extraTime);
                    break;
                case /* google.protobuf.UInt32Value injury_time */ 17:
                    message.injuryTime = UInt32Value.internalBinaryRead(reader, reader.uint32(), options, message.injuryTime);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MatchStats, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.protobuf.StringValue pitch = 1; */
        if (message.pitch)
            StringValue.internalBinaryWrite(message.pitch, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.StringValue home_formation = 2; */
        if (message.homeFormation)
            StringValue.internalBinaryWrite(message.homeFormation, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.StringValue away_formation = 3; */
        if (message.awayFormation)
            StringValue.internalBinaryWrite(message.awayFormation, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.UInt32Value home_score = 4; */
        if (message.homeScore)
            UInt32Value.internalBinaryWrite(message.homeScore, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.UInt32Value away_score = 5; */
        if (message.awayScore)
            UInt32Value.internalBinaryWrite(message.awayScore, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.UInt32Value home_pen_score = 6; */
        if (message.homePenScore)
            UInt32Value.internalBinaryWrite(message.homePenScore, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.UInt32Value away_pen_score = 7; */
        if (message.awayPenScore)
            UInt32Value.internalBinaryWrite(message.awayPenScore, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.StringValue half_time_score = 8; */
        if (message.halfTimeScore)
            StringValue.internalBinaryWrite(message.halfTimeScore, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.StringValue full_time_score = 9; */
        if (message.fullTimeScore)
            StringValue.internalBinaryWrite(message.fullTimeScore, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.StringValue extra_time_score = 10; */
        if (message.extraTimeScore)
            StringValue.internalBinaryWrite(message.extraTimeScore, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.UInt32Value home_league_position = 11; */
        if (message.homeLeaguePosition)
            UInt32Value.internalBinaryWrite(message.homeLeaguePosition, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.UInt32Value away_league_position = 12; */
        if (message.awayLeaguePosition)
            UInt32Value.internalBinaryWrite(message.awayLeaguePosition, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.UInt32Value minutes = 13; */
        if (message.minutes)
            UInt32Value.internalBinaryWrite(message.minutes, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.UInt32Value added_time = 15; */
        if (message.addedTime)
            UInt32Value.internalBinaryWrite(message.addedTime, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.UInt32Value extra_time = 16; */
        if (message.extraTime)
            UInt32Value.internalBinaryWrite(message.extraTime, writer.tag(16, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.UInt32Value injury_time = 17; */
        if (message.injuryTime)
            UInt32Value.internalBinaryWrite(message.injuryTime, writer.tag(17, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message statistico.MatchStats
 */
export const MatchStats = new MatchStats$Type();
/**
 * @generated ServiceType for protobuf service statistico.ResultService
 */
export const ResultService = new ServiceType("statistico.ResultService", [
    { name: "GetById", options: {}, I: ResultRequest, O: Result },
    { name: "GetHistoricalResultsForFixture", serverStreaming: true, options: {}, I: HistoricalResultRequest, O: Result },
    { name: "GetResultsForSeason", serverStreaming: true, options: {}, I: SeasonRequest, O: Result },
    { name: "GetResultsForTeam", serverStreaming: true, options: {}, I: TeamResultRequest, O: Result }
]);
