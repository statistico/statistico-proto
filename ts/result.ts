/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.14.0
 * source: result.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./google/protobuf/wrappers";
import * as dependency_2 from "./common";
import * as dependency_3 from "./requests";
import * as dependency_4 from "./round";
import * as dependency_5 from "./season";
import * as dependency_6 from "./team";
import * as dependency_7 from "./team_stats";
import * as dependency_8 from "./venue";
import * as pb_1 from "google-protobuf";
import * as grpc_1 from "@grpc/grpc-js";
export namespace statistico {
    export class Result extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            id?: number;
            home_team?: dependency_6.statistico.Team;
            away_team?: dependency_6.statistico.Team;
            season?: dependency_5.statistico.Season;
            round?: dependency_4.statistico.Round;
            venue?: dependency_8.statistico.Venue;
            date_time?: dependency_2.statistico.Date;
            stats?: MatchStats;
            home_team_stats?: dependency_7.statistico.TeamStats;
            away_team_stats?: dependency_7.statistico.TeamStats;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("home_team" in data && data.home_team != undefined) {
                    this.home_team = data.home_team;
                }
                if ("away_team" in data && data.away_team != undefined) {
                    this.away_team = data.away_team;
                }
                if ("season" in data && data.season != undefined) {
                    this.season = data.season;
                }
                if ("round" in data && data.round != undefined) {
                    this.round = data.round;
                }
                if ("venue" in data && data.venue != undefined) {
                    this.venue = data.venue;
                }
                if ("date_time" in data && data.date_time != undefined) {
                    this.date_time = data.date_time;
                }
                if ("stats" in data && data.stats != undefined) {
                    this.stats = data.stats;
                }
                if ("home_team_stats" in data && data.home_team_stats != undefined) {
                    this.home_team_stats = data.home_team_stats;
                }
                if ("away_team_stats" in data && data.away_team_stats != undefined) {
                    this.away_team_stats = data.away_team_stats;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get home_team() {
            return pb_1.Message.getWrapperField(this, dependency_6.statistico.Team, 2) as dependency_6.statistico.Team;
        }
        set home_team(value: dependency_6.statistico.Team) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_home_team() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get away_team() {
            return pb_1.Message.getWrapperField(this, dependency_6.statistico.Team, 3) as dependency_6.statistico.Team;
        }
        set away_team(value: dependency_6.statistico.Team) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_away_team() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get season() {
            return pb_1.Message.getWrapperField(this, dependency_5.statistico.Season, 4) as dependency_5.statistico.Season;
        }
        set season(value: dependency_5.statistico.Season) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_season() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get round() {
            return pb_1.Message.getWrapperField(this, dependency_4.statistico.Round, 5) as dependency_4.statistico.Round;
        }
        set round(value: dependency_4.statistico.Round) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get has_round() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get venue() {
            return pb_1.Message.getWrapperField(this, dependency_8.statistico.Venue, 6) as dependency_8.statistico.Venue;
        }
        set venue(value: dependency_8.statistico.Venue) {
            pb_1.Message.setWrapperField(this, 6, value);
        }
        get has_venue() {
            return pb_1.Message.getField(this, 6) != null;
        }
        get date_time() {
            return pb_1.Message.getWrapperField(this, dependency_2.statistico.Date, 7) as dependency_2.statistico.Date;
        }
        set date_time(value: dependency_2.statistico.Date) {
            pb_1.Message.setWrapperField(this, 7, value);
        }
        get has_date_time() {
            return pb_1.Message.getField(this, 7) != null;
        }
        get stats() {
            return pb_1.Message.getWrapperField(this, MatchStats, 8) as MatchStats;
        }
        set stats(value: MatchStats) {
            pb_1.Message.setWrapperField(this, 8, value);
        }
        get has_stats() {
            return pb_1.Message.getField(this, 8) != null;
        }
        get home_team_stats() {
            return pb_1.Message.getWrapperField(this, dependency_7.statistico.TeamStats, 9) as dependency_7.statistico.TeamStats;
        }
        set home_team_stats(value: dependency_7.statistico.TeamStats) {
            pb_1.Message.setWrapperField(this, 9, value);
        }
        get has_home_team_stats() {
            return pb_1.Message.getField(this, 9) != null;
        }
        get away_team_stats() {
            return pb_1.Message.getWrapperField(this, dependency_7.statistico.TeamStats, 10) as dependency_7.statistico.TeamStats;
        }
        set away_team_stats(value: dependency_7.statistico.TeamStats) {
            pb_1.Message.setWrapperField(this, 10, value);
        }
        get has_away_team_stats() {
            return pb_1.Message.getField(this, 10) != null;
        }
        static fromObject(data: {
            id?: number;
            home_team?: ReturnType<typeof dependency_6.statistico.Team.prototype.toObject>;
            away_team?: ReturnType<typeof dependency_6.statistico.Team.prototype.toObject>;
            season?: ReturnType<typeof dependency_5.statistico.Season.prototype.toObject>;
            round?: ReturnType<typeof dependency_4.statistico.Round.prototype.toObject>;
            venue?: ReturnType<typeof dependency_8.statistico.Venue.prototype.toObject>;
            date_time?: ReturnType<typeof dependency_2.statistico.Date.prototype.toObject>;
            stats?: ReturnType<typeof MatchStats.prototype.toObject>;
            home_team_stats?: ReturnType<typeof dependency_7.statistico.TeamStats.prototype.toObject>;
            away_team_stats?: ReturnType<typeof dependency_7.statistico.TeamStats.prototype.toObject>;
        }): Result {
            const message = new Result({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.home_team != null) {
                message.home_team = dependency_6.statistico.Team.fromObject(data.home_team);
            }
            if (data.away_team != null) {
                message.away_team = dependency_6.statistico.Team.fromObject(data.away_team);
            }
            if (data.season != null) {
                message.season = dependency_5.statistico.Season.fromObject(data.season);
            }
            if (data.round != null) {
                message.round = dependency_4.statistico.Round.fromObject(data.round);
            }
            if (data.venue != null) {
                message.venue = dependency_8.statistico.Venue.fromObject(data.venue);
            }
            if (data.date_time != null) {
                message.date_time = dependency_2.statistico.Date.fromObject(data.date_time);
            }
            if (data.stats != null) {
                message.stats = MatchStats.fromObject(data.stats);
            }
            if (data.home_team_stats != null) {
                message.home_team_stats = dependency_7.statistico.TeamStats.fromObject(data.home_team_stats);
            }
            if (data.away_team_stats != null) {
                message.away_team_stats = dependency_7.statistico.TeamStats.fromObject(data.away_team_stats);
            }
            return message;
        }
        toObject() {
            const data: {
                id?: number;
                home_team?: ReturnType<typeof dependency_6.statistico.Team.prototype.toObject>;
                away_team?: ReturnType<typeof dependency_6.statistico.Team.prototype.toObject>;
                season?: ReturnType<typeof dependency_5.statistico.Season.prototype.toObject>;
                round?: ReturnType<typeof dependency_4.statistico.Round.prototype.toObject>;
                venue?: ReturnType<typeof dependency_8.statistico.Venue.prototype.toObject>;
                date_time?: ReturnType<typeof dependency_2.statistico.Date.prototype.toObject>;
                stats?: ReturnType<typeof MatchStats.prototype.toObject>;
                home_team_stats?: ReturnType<typeof dependency_7.statistico.TeamStats.prototype.toObject>;
                away_team_stats?: ReturnType<typeof dependency_7.statistico.TeamStats.prototype.toObject>;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.home_team != null) {
                data.home_team = this.home_team.toObject();
            }
            if (this.away_team != null) {
                data.away_team = this.away_team.toObject();
            }
            if (this.season != null) {
                data.season = this.season.toObject();
            }
            if (this.round != null) {
                data.round = this.round.toObject();
            }
            if (this.venue != null) {
                data.venue = this.venue.toObject();
            }
            if (this.date_time != null) {
                data.date_time = this.date_time.toObject();
            }
            if (this.stats != null) {
                data.stats = this.stats.toObject();
            }
            if (this.home_team_stats != null) {
                data.home_team_stats = this.home_team_stats.toObject();
            }
            if (this.away_team_stats != null) {
                data.away_team_stats = this.away_team_stats.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id != 0)
                writer.writeUint64(1, this.id);
            if (this.has_home_team)
                writer.writeMessage(2, this.home_team, () => this.home_team.serialize(writer));
            if (this.has_away_team)
                writer.writeMessage(3, this.away_team, () => this.away_team.serialize(writer));
            if (this.has_season)
                writer.writeMessage(4, this.season, () => this.season.serialize(writer));
            if (this.has_round)
                writer.writeMessage(5, this.round, () => this.round.serialize(writer));
            if (this.has_venue)
                writer.writeMessage(6, this.venue, () => this.venue.serialize(writer));
            if (this.has_date_time)
                writer.writeMessage(7, this.date_time, () => this.date_time.serialize(writer));
            if (this.has_stats)
                writer.writeMessage(8, this.stats, () => this.stats.serialize(writer));
            if (this.has_home_team_stats)
                writer.writeMessage(9, this.home_team_stats, () => this.home_team_stats.serialize(writer));
            if (this.has_away_team_stats)
                writer.writeMessage(10, this.away_team_stats, () => this.away_team_stats.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Result {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Result();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readUint64();
                        break;
                    case 2:
                        reader.readMessage(message.home_team, () => message.home_team = dependency_6.statistico.Team.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.away_team, () => message.away_team = dependency_6.statistico.Team.deserialize(reader));
                        break;
                    case 4:
                        reader.readMessage(message.season, () => message.season = dependency_5.statistico.Season.deserialize(reader));
                        break;
                    case 5:
                        reader.readMessage(message.round, () => message.round = dependency_4.statistico.Round.deserialize(reader));
                        break;
                    case 6:
                        reader.readMessage(message.venue, () => message.venue = dependency_8.statistico.Venue.deserialize(reader));
                        break;
                    case 7:
                        reader.readMessage(message.date_time, () => message.date_time = dependency_2.statistico.Date.deserialize(reader));
                        break;
                    case 8:
                        reader.readMessage(message.stats, () => message.stats = MatchStats.deserialize(reader));
                        break;
                    case 9:
                        reader.readMessage(message.home_team_stats, () => message.home_team_stats = dependency_7.statistico.TeamStats.deserialize(reader));
                        break;
                    case 10:
                        reader.readMessage(message.away_team_stats, () => message.away_team_stats = dependency_7.statistico.TeamStats.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Result {
            return Result.deserialize(bytes);
        }
    }
    export class MatchStats extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            pitch?: dependency_1.google.protobuf.StringValue;
            home_formation?: dependency_1.google.protobuf.StringValue;
            away_formation?: dependency_1.google.protobuf.StringValue;
            home_score?: dependency_1.google.protobuf.UInt32Value;
            away_score?: dependency_1.google.protobuf.UInt32Value;
            home_pen_score?: dependency_1.google.protobuf.UInt32Value;
            away_pen_score?: dependency_1.google.protobuf.UInt32Value;
            half_time_score?: dependency_1.google.protobuf.StringValue;
            full_time_score?: dependency_1.google.protobuf.StringValue;
            extra_time_score?: dependency_1.google.protobuf.StringValue;
            home_league_position?: dependency_1.google.protobuf.UInt32Value;
            away_league_position?: dependency_1.google.protobuf.UInt32Value;
            minutes?: dependency_1.google.protobuf.UInt32Value;
            added_time?: dependency_1.google.protobuf.UInt32Value;
            extra_time?: dependency_1.google.protobuf.UInt32Value;
            injury_time?: dependency_1.google.protobuf.UInt32Value;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("pitch" in data && data.pitch != undefined) {
                    this.pitch = data.pitch;
                }
                if ("home_formation" in data && data.home_formation != undefined) {
                    this.home_formation = data.home_formation;
                }
                if ("away_formation" in data && data.away_formation != undefined) {
                    this.away_formation = data.away_formation;
                }
                if ("home_score" in data && data.home_score != undefined) {
                    this.home_score = data.home_score;
                }
                if ("away_score" in data && data.away_score != undefined) {
                    this.away_score = data.away_score;
                }
                if ("home_pen_score" in data && data.home_pen_score != undefined) {
                    this.home_pen_score = data.home_pen_score;
                }
                if ("away_pen_score" in data && data.away_pen_score != undefined) {
                    this.away_pen_score = data.away_pen_score;
                }
                if ("half_time_score" in data && data.half_time_score != undefined) {
                    this.half_time_score = data.half_time_score;
                }
                if ("full_time_score" in data && data.full_time_score != undefined) {
                    this.full_time_score = data.full_time_score;
                }
                if ("extra_time_score" in data && data.extra_time_score != undefined) {
                    this.extra_time_score = data.extra_time_score;
                }
                if ("home_league_position" in data && data.home_league_position != undefined) {
                    this.home_league_position = data.home_league_position;
                }
                if ("away_league_position" in data && data.away_league_position != undefined) {
                    this.away_league_position = data.away_league_position;
                }
                if ("minutes" in data && data.minutes != undefined) {
                    this.minutes = data.minutes;
                }
                if ("added_time" in data && data.added_time != undefined) {
                    this.added_time = data.added_time;
                }
                if ("extra_time" in data && data.extra_time != undefined) {
                    this.extra_time = data.extra_time;
                }
                if ("injury_time" in data && data.injury_time != undefined) {
                    this.injury_time = data.injury_time;
                }
            }
        }
        get pitch() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.StringValue, 1) as dependency_1.google.protobuf.StringValue;
        }
        set pitch(value: dependency_1.google.protobuf.StringValue) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_pitch() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get home_formation() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.StringValue, 2) as dependency_1.google.protobuf.StringValue;
        }
        set home_formation(value: dependency_1.google.protobuf.StringValue) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_home_formation() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get away_formation() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.StringValue, 3) as dependency_1.google.protobuf.StringValue;
        }
        set away_formation(value: dependency_1.google.protobuf.StringValue) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_away_formation() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get home_score() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.UInt32Value, 4) as dependency_1.google.protobuf.UInt32Value;
        }
        set home_score(value: dependency_1.google.protobuf.UInt32Value) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_home_score() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get away_score() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.UInt32Value, 5) as dependency_1.google.protobuf.UInt32Value;
        }
        set away_score(value: dependency_1.google.protobuf.UInt32Value) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get has_away_score() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get home_pen_score() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.UInt32Value, 6) as dependency_1.google.protobuf.UInt32Value;
        }
        set home_pen_score(value: dependency_1.google.protobuf.UInt32Value) {
            pb_1.Message.setWrapperField(this, 6, value);
        }
        get has_home_pen_score() {
            return pb_1.Message.getField(this, 6) != null;
        }
        get away_pen_score() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.UInt32Value, 7) as dependency_1.google.protobuf.UInt32Value;
        }
        set away_pen_score(value: dependency_1.google.protobuf.UInt32Value) {
            pb_1.Message.setWrapperField(this, 7, value);
        }
        get has_away_pen_score() {
            return pb_1.Message.getField(this, 7) != null;
        }
        get half_time_score() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.StringValue, 8) as dependency_1.google.protobuf.StringValue;
        }
        set half_time_score(value: dependency_1.google.protobuf.StringValue) {
            pb_1.Message.setWrapperField(this, 8, value);
        }
        get has_half_time_score() {
            return pb_1.Message.getField(this, 8) != null;
        }
        get full_time_score() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.StringValue, 9) as dependency_1.google.protobuf.StringValue;
        }
        set full_time_score(value: dependency_1.google.protobuf.StringValue) {
            pb_1.Message.setWrapperField(this, 9, value);
        }
        get has_full_time_score() {
            return pb_1.Message.getField(this, 9) != null;
        }
        get extra_time_score() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.StringValue, 10) as dependency_1.google.protobuf.StringValue;
        }
        set extra_time_score(value: dependency_1.google.protobuf.StringValue) {
            pb_1.Message.setWrapperField(this, 10, value);
        }
        get has_extra_time_score() {
            return pb_1.Message.getField(this, 10) != null;
        }
        get home_league_position() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.UInt32Value, 11) as dependency_1.google.protobuf.UInt32Value;
        }
        set home_league_position(value: dependency_1.google.protobuf.UInt32Value) {
            pb_1.Message.setWrapperField(this, 11, value);
        }
        get has_home_league_position() {
            return pb_1.Message.getField(this, 11) != null;
        }
        get away_league_position() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.UInt32Value, 12) as dependency_1.google.protobuf.UInt32Value;
        }
        set away_league_position(value: dependency_1.google.protobuf.UInt32Value) {
            pb_1.Message.setWrapperField(this, 12, value);
        }
        get has_away_league_position() {
            return pb_1.Message.getField(this, 12) != null;
        }
        get minutes() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.UInt32Value, 13) as dependency_1.google.protobuf.UInt32Value;
        }
        set minutes(value: dependency_1.google.protobuf.UInt32Value) {
            pb_1.Message.setWrapperField(this, 13, value);
        }
        get has_minutes() {
            return pb_1.Message.getField(this, 13) != null;
        }
        get added_time() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.UInt32Value, 15) as dependency_1.google.protobuf.UInt32Value;
        }
        set added_time(value: dependency_1.google.protobuf.UInt32Value) {
            pb_1.Message.setWrapperField(this, 15, value);
        }
        get has_added_time() {
            return pb_1.Message.getField(this, 15) != null;
        }
        get extra_time() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.UInt32Value, 16) as dependency_1.google.protobuf.UInt32Value;
        }
        set extra_time(value: dependency_1.google.protobuf.UInt32Value) {
            pb_1.Message.setWrapperField(this, 16, value);
        }
        get has_extra_time() {
            return pb_1.Message.getField(this, 16) != null;
        }
        get injury_time() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.UInt32Value, 17) as dependency_1.google.protobuf.UInt32Value;
        }
        set injury_time(value: dependency_1.google.protobuf.UInt32Value) {
            pb_1.Message.setWrapperField(this, 17, value);
        }
        get has_injury_time() {
            return pb_1.Message.getField(this, 17) != null;
        }
        static fromObject(data: {
            pitch?: ReturnType<typeof dependency_1.google.protobuf.StringValue.prototype.toObject>;
            home_formation?: ReturnType<typeof dependency_1.google.protobuf.StringValue.prototype.toObject>;
            away_formation?: ReturnType<typeof dependency_1.google.protobuf.StringValue.prototype.toObject>;
            home_score?: ReturnType<typeof dependency_1.google.protobuf.UInt32Value.prototype.toObject>;
            away_score?: ReturnType<typeof dependency_1.google.protobuf.UInt32Value.prototype.toObject>;
            home_pen_score?: ReturnType<typeof dependency_1.google.protobuf.UInt32Value.prototype.toObject>;
            away_pen_score?: ReturnType<typeof dependency_1.google.protobuf.UInt32Value.prototype.toObject>;
            half_time_score?: ReturnType<typeof dependency_1.google.protobuf.StringValue.prototype.toObject>;
            full_time_score?: ReturnType<typeof dependency_1.google.protobuf.StringValue.prototype.toObject>;
            extra_time_score?: ReturnType<typeof dependency_1.google.protobuf.StringValue.prototype.toObject>;
            home_league_position?: ReturnType<typeof dependency_1.google.protobuf.UInt32Value.prototype.toObject>;
            away_league_position?: ReturnType<typeof dependency_1.google.protobuf.UInt32Value.prototype.toObject>;
            minutes?: ReturnType<typeof dependency_1.google.protobuf.UInt32Value.prototype.toObject>;
            added_time?: ReturnType<typeof dependency_1.google.protobuf.UInt32Value.prototype.toObject>;
            extra_time?: ReturnType<typeof dependency_1.google.protobuf.UInt32Value.prototype.toObject>;
            injury_time?: ReturnType<typeof dependency_1.google.protobuf.UInt32Value.prototype.toObject>;
        }): MatchStats {
            const message = new MatchStats({});
            if (data.pitch != null) {
                message.pitch = dependency_1.google.protobuf.StringValue.fromObject(data.pitch);
            }
            if (data.home_formation != null) {
                message.home_formation = dependency_1.google.protobuf.StringValue.fromObject(data.home_formation);
            }
            if (data.away_formation != null) {
                message.away_formation = dependency_1.google.protobuf.StringValue.fromObject(data.away_formation);
            }
            if (data.home_score != null) {
                message.home_score = dependency_1.google.protobuf.UInt32Value.fromObject(data.home_score);
            }
            if (data.away_score != null) {
                message.away_score = dependency_1.google.protobuf.UInt32Value.fromObject(data.away_score);
            }
            if (data.home_pen_score != null) {
                message.home_pen_score = dependency_1.google.protobuf.UInt32Value.fromObject(data.home_pen_score);
            }
            if (data.away_pen_score != null) {
                message.away_pen_score = dependency_1.google.protobuf.UInt32Value.fromObject(data.away_pen_score);
            }
            if (data.half_time_score != null) {
                message.half_time_score = dependency_1.google.protobuf.StringValue.fromObject(data.half_time_score);
            }
            if (data.full_time_score != null) {
                message.full_time_score = dependency_1.google.protobuf.StringValue.fromObject(data.full_time_score);
            }
            if (data.extra_time_score != null) {
                message.extra_time_score = dependency_1.google.protobuf.StringValue.fromObject(data.extra_time_score);
            }
            if (data.home_league_position != null) {
                message.home_league_position = dependency_1.google.protobuf.UInt32Value.fromObject(data.home_league_position);
            }
            if (data.away_league_position != null) {
                message.away_league_position = dependency_1.google.protobuf.UInt32Value.fromObject(data.away_league_position);
            }
            if (data.minutes != null) {
                message.minutes = dependency_1.google.protobuf.UInt32Value.fromObject(data.minutes);
            }
            if (data.added_time != null) {
                message.added_time = dependency_1.google.protobuf.UInt32Value.fromObject(data.added_time);
            }
            if (data.extra_time != null) {
                message.extra_time = dependency_1.google.protobuf.UInt32Value.fromObject(data.extra_time);
            }
            if (data.injury_time != null) {
                message.injury_time = dependency_1.google.protobuf.UInt32Value.fromObject(data.injury_time);
            }
            return message;
        }
        toObject() {
            const data: {
                pitch?: ReturnType<typeof dependency_1.google.protobuf.StringValue.prototype.toObject>;
                home_formation?: ReturnType<typeof dependency_1.google.protobuf.StringValue.prototype.toObject>;
                away_formation?: ReturnType<typeof dependency_1.google.protobuf.StringValue.prototype.toObject>;
                home_score?: ReturnType<typeof dependency_1.google.protobuf.UInt32Value.prototype.toObject>;
                away_score?: ReturnType<typeof dependency_1.google.protobuf.UInt32Value.prototype.toObject>;
                home_pen_score?: ReturnType<typeof dependency_1.google.protobuf.UInt32Value.prototype.toObject>;
                away_pen_score?: ReturnType<typeof dependency_1.google.protobuf.UInt32Value.prototype.toObject>;
                half_time_score?: ReturnType<typeof dependency_1.google.protobuf.StringValue.prototype.toObject>;
                full_time_score?: ReturnType<typeof dependency_1.google.protobuf.StringValue.prototype.toObject>;
                extra_time_score?: ReturnType<typeof dependency_1.google.protobuf.StringValue.prototype.toObject>;
                home_league_position?: ReturnType<typeof dependency_1.google.protobuf.UInt32Value.prototype.toObject>;
                away_league_position?: ReturnType<typeof dependency_1.google.protobuf.UInt32Value.prototype.toObject>;
                minutes?: ReturnType<typeof dependency_1.google.protobuf.UInt32Value.prototype.toObject>;
                added_time?: ReturnType<typeof dependency_1.google.protobuf.UInt32Value.prototype.toObject>;
                extra_time?: ReturnType<typeof dependency_1.google.protobuf.UInt32Value.prototype.toObject>;
                injury_time?: ReturnType<typeof dependency_1.google.protobuf.UInt32Value.prototype.toObject>;
            } = {};
            if (this.pitch != null) {
                data.pitch = this.pitch.toObject();
            }
            if (this.home_formation != null) {
                data.home_formation = this.home_formation.toObject();
            }
            if (this.away_formation != null) {
                data.away_formation = this.away_formation.toObject();
            }
            if (this.home_score != null) {
                data.home_score = this.home_score.toObject();
            }
            if (this.away_score != null) {
                data.away_score = this.away_score.toObject();
            }
            if (this.home_pen_score != null) {
                data.home_pen_score = this.home_pen_score.toObject();
            }
            if (this.away_pen_score != null) {
                data.away_pen_score = this.away_pen_score.toObject();
            }
            if (this.half_time_score != null) {
                data.half_time_score = this.half_time_score.toObject();
            }
            if (this.full_time_score != null) {
                data.full_time_score = this.full_time_score.toObject();
            }
            if (this.extra_time_score != null) {
                data.extra_time_score = this.extra_time_score.toObject();
            }
            if (this.home_league_position != null) {
                data.home_league_position = this.home_league_position.toObject();
            }
            if (this.away_league_position != null) {
                data.away_league_position = this.away_league_position.toObject();
            }
            if (this.minutes != null) {
                data.minutes = this.minutes.toObject();
            }
            if (this.added_time != null) {
                data.added_time = this.added_time.toObject();
            }
            if (this.extra_time != null) {
                data.extra_time = this.extra_time.toObject();
            }
            if (this.injury_time != null) {
                data.injury_time = this.injury_time.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_pitch)
                writer.writeMessage(1, this.pitch, () => this.pitch.serialize(writer));
            if (this.has_home_formation)
                writer.writeMessage(2, this.home_formation, () => this.home_formation.serialize(writer));
            if (this.has_away_formation)
                writer.writeMessage(3, this.away_formation, () => this.away_formation.serialize(writer));
            if (this.has_home_score)
                writer.writeMessage(4, this.home_score, () => this.home_score.serialize(writer));
            if (this.has_away_score)
                writer.writeMessage(5, this.away_score, () => this.away_score.serialize(writer));
            if (this.has_home_pen_score)
                writer.writeMessage(6, this.home_pen_score, () => this.home_pen_score.serialize(writer));
            if (this.has_away_pen_score)
                writer.writeMessage(7, this.away_pen_score, () => this.away_pen_score.serialize(writer));
            if (this.has_half_time_score)
                writer.writeMessage(8, this.half_time_score, () => this.half_time_score.serialize(writer));
            if (this.has_full_time_score)
                writer.writeMessage(9, this.full_time_score, () => this.full_time_score.serialize(writer));
            if (this.has_extra_time_score)
                writer.writeMessage(10, this.extra_time_score, () => this.extra_time_score.serialize(writer));
            if (this.has_home_league_position)
                writer.writeMessage(11, this.home_league_position, () => this.home_league_position.serialize(writer));
            if (this.has_away_league_position)
                writer.writeMessage(12, this.away_league_position, () => this.away_league_position.serialize(writer));
            if (this.has_minutes)
                writer.writeMessage(13, this.minutes, () => this.minutes.serialize(writer));
            if (this.has_added_time)
                writer.writeMessage(15, this.added_time, () => this.added_time.serialize(writer));
            if (this.has_extra_time)
                writer.writeMessage(16, this.extra_time, () => this.extra_time.serialize(writer));
            if (this.has_injury_time)
                writer.writeMessage(17, this.injury_time, () => this.injury_time.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MatchStats {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MatchStats();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.pitch, () => message.pitch = dependency_1.google.protobuf.StringValue.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.home_formation, () => message.home_formation = dependency_1.google.protobuf.StringValue.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.away_formation, () => message.away_formation = dependency_1.google.protobuf.StringValue.deserialize(reader));
                        break;
                    case 4:
                        reader.readMessage(message.home_score, () => message.home_score = dependency_1.google.protobuf.UInt32Value.deserialize(reader));
                        break;
                    case 5:
                        reader.readMessage(message.away_score, () => message.away_score = dependency_1.google.protobuf.UInt32Value.deserialize(reader));
                        break;
                    case 6:
                        reader.readMessage(message.home_pen_score, () => message.home_pen_score = dependency_1.google.protobuf.UInt32Value.deserialize(reader));
                        break;
                    case 7:
                        reader.readMessage(message.away_pen_score, () => message.away_pen_score = dependency_1.google.protobuf.UInt32Value.deserialize(reader));
                        break;
                    case 8:
                        reader.readMessage(message.half_time_score, () => message.half_time_score = dependency_1.google.protobuf.StringValue.deserialize(reader));
                        break;
                    case 9:
                        reader.readMessage(message.full_time_score, () => message.full_time_score = dependency_1.google.protobuf.StringValue.deserialize(reader));
                        break;
                    case 10:
                        reader.readMessage(message.extra_time_score, () => message.extra_time_score = dependency_1.google.protobuf.StringValue.deserialize(reader));
                        break;
                    case 11:
                        reader.readMessage(message.home_league_position, () => message.home_league_position = dependency_1.google.protobuf.UInt32Value.deserialize(reader));
                        break;
                    case 12:
                        reader.readMessage(message.away_league_position, () => message.away_league_position = dependency_1.google.protobuf.UInt32Value.deserialize(reader));
                        break;
                    case 13:
                        reader.readMessage(message.minutes, () => message.minutes = dependency_1.google.protobuf.UInt32Value.deserialize(reader));
                        break;
                    case 15:
                        reader.readMessage(message.added_time, () => message.added_time = dependency_1.google.protobuf.UInt32Value.deserialize(reader));
                        break;
                    case 16:
                        reader.readMessage(message.extra_time, () => message.extra_time = dependency_1.google.protobuf.UInt32Value.deserialize(reader));
                        break;
                    case 17:
                        reader.readMessage(message.injury_time, () => message.injury_time = dependency_1.google.protobuf.UInt32Value.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): MatchStats {
            return MatchStats.deserialize(bytes);
        }
    }
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedResultServiceService {
        static definition = {
            GetById: {
                path: "/statistico.ResultService/GetById",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_3.statistico.ResultRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_3.statistico.ResultRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: Result) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => Result.deserialize(new Uint8Array(bytes))
            },
            GetHistoricalResultsForFixture: {
                path: "/statistico.ResultService/GetHistoricalResultsForFixture",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_3.statistico.HistoricalResultRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_3.statistico.HistoricalResultRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: Result) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => Result.deserialize(new Uint8Array(bytes))
            },
            GetResultsForSeason: {
                path: "/statistico.ResultService/GetResultsForSeason",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_3.statistico.SeasonRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_3.statistico.SeasonRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: Result) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => Result.deserialize(new Uint8Array(bytes))
            },
            GetResultsForTeam: {
                path: "/statistico.ResultService/GetResultsForTeam",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_3.statistico.TeamResultRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_3.statistico.TeamResultRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: Result) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => Result.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract GetById(call: grpc_1.ServerUnaryCall<dependency_3.statistico.ResultRequest, Result>, callback: grpc_1.sendUnaryData<Result>): void;
        abstract GetHistoricalResultsForFixture(call: grpc_1.ServerWritableStream<dependency_3.statistico.HistoricalResultRequest, Result>): void;
        abstract GetResultsForSeason(call: grpc_1.ServerWritableStream<dependency_3.statistico.SeasonRequest, Result>): void;
        abstract GetResultsForTeam(call: grpc_1.ServerWritableStream<dependency_3.statistico.TeamResultRequest, Result>): void;
    }
    export class ResultServiceClient extends grpc_1.makeGenericClientConstructor(UnimplementedResultServiceService.definition, "ResultService", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        GetById: GrpcUnaryServiceInterface<dependency_3.statistico.ResultRequest, Result> = (message: dependency_3.statistico.ResultRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<Result>, options?: grpc_1.CallOptions | grpc_1.requestCallback<Result>, callback?: grpc_1.requestCallback<Result>): grpc_1.ClientUnaryCall => {
            return super.GetById(message, metadata, options, callback);
        };
        GetHistoricalResultsForFixture: GrpcStreamServiceInterface<dependency_3.statistico.HistoricalResultRequest, Result> = (message: dependency_3.statistico.HistoricalResultRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<Result> => {
            return super.GetHistoricalResultsForFixture(message, metadata, options);
        };
        GetResultsForSeason: GrpcStreamServiceInterface<dependency_3.statistico.SeasonRequest, Result> = (message: dependency_3.statistico.SeasonRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<Result> => {
            return super.GetResultsForSeason(message, metadata, options);
        };
        GetResultsForTeam: GrpcStreamServiceInterface<dependency_3.statistico.TeamResultRequest, Result> = (message: dependency_3.statistico.TeamResultRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<Result> => {
            return super.GetResultsForTeam(message, metadata, options);
        };
    }
}
