// Code generated by protoc-gen-go. DO NOT EDIT.
// source: season.proto

package statistico

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TeamSeasonsRequest struct {
	TeamId uint64 `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	// Order the name column to return seasons in specific order
	Sort *wrappers.StringValue `protobuf:"bytes,2,opt,name=sort,proto3" json:"sort,omitempty"`
	// Boolean flag to include seasons for cup competitions in response
	IncludeCup           *wrappers.BoolValue `protobuf:"bytes,3,opt,name=include_cup,json=includeCup,proto3" json:"include_cup,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TeamSeasonsRequest) Reset()         { *m = TeamSeasonsRequest{} }
func (m *TeamSeasonsRequest) String() string { return proto.CompactTextString(m) }
func (*TeamSeasonsRequest) ProtoMessage()    {}
func (*TeamSeasonsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f802e8f3a685f05, []int{0}
}

func (m *TeamSeasonsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamSeasonsRequest.Unmarshal(m, b)
}
func (m *TeamSeasonsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamSeasonsRequest.Marshal(b, m, deterministic)
}
func (m *TeamSeasonsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamSeasonsRequest.Merge(m, src)
}
func (m *TeamSeasonsRequest) XXX_Size() int {
	return xxx_messageInfo_TeamSeasonsRequest.Size(m)
}
func (m *TeamSeasonsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamSeasonsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TeamSeasonsRequest proto.InternalMessageInfo

func (m *TeamSeasonsRequest) GetTeamId() uint64 {
	if m != nil {
		return m.TeamId
	}
	return 0
}

func (m *TeamSeasonsRequest) GetSort() *wrappers.StringValue {
	if m != nil {
		return m.Sort
	}
	return nil
}

func (m *TeamSeasonsRequest) GetIncludeCup() *wrappers.BoolValue {
	if m != nil {
		return m.IncludeCup
	}
	return nil
}

type TeamSeasonsResponse struct {
	Seasons              []*Season `protobuf:"bytes,1,rep,name=seasons,proto3" json:"seasons,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TeamSeasonsResponse) Reset()         { *m = TeamSeasonsResponse{} }
func (m *TeamSeasonsResponse) String() string { return proto.CompactTextString(m) }
func (*TeamSeasonsResponse) ProtoMessage()    {}
func (*TeamSeasonsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f802e8f3a685f05, []int{1}
}

func (m *TeamSeasonsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamSeasonsResponse.Unmarshal(m, b)
}
func (m *TeamSeasonsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamSeasonsResponse.Marshal(b, m, deterministic)
}
func (m *TeamSeasonsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamSeasonsResponse.Merge(m, src)
}
func (m *TeamSeasonsResponse) XXX_Size() int {
	return xxx_messageInfo_TeamSeasonsResponse.Size(m)
}
func (m *TeamSeasonsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamSeasonsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TeamSeasonsResponse proto.InternalMessageInfo

func (m *TeamSeasonsResponse) GetSeasons() []*Season {
	if m != nil {
		return m.Seasons
	}
	return nil
}

type Season struct {
	Id                   uint64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IsCurrent            *wrappers.BoolValue `protobuf:"bytes,3,opt,name=is_current,json=isCurrent,proto3" json:"is_current,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Season) Reset()         { *m = Season{} }
func (m *Season) String() string { return proto.CompactTextString(m) }
func (*Season) ProtoMessage()    {}
func (*Season) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f802e8f3a685f05, []int{2}
}

func (m *Season) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Season.Unmarshal(m, b)
}
func (m *Season) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Season.Marshal(b, m, deterministic)
}
func (m *Season) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Season.Merge(m, src)
}
func (m *Season) XXX_Size() int {
	return xxx_messageInfo_Season.Size(m)
}
func (m *Season) XXX_DiscardUnknown() {
	xxx_messageInfo_Season.DiscardUnknown(m)
}

var xxx_messageInfo_Season proto.InternalMessageInfo

func (m *Season) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Season) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Season) GetIsCurrent() *wrappers.BoolValue {
	if m != nil {
		return m.IsCurrent
	}
	return nil
}

func init() {
	proto.RegisterType((*TeamSeasonsRequest)(nil), "statistico.TeamSeasonsRequest")
	proto.RegisterType((*TeamSeasonsResponse)(nil), "statistico.TeamSeasonsResponse")
	proto.RegisterType((*Season)(nil), "statistico.Season")
}

func init() { proto.RegisterFile("season.proto", fileDescriptor_9f802e8f3a685f05) }

var fileDescriptor_9f802e8f3a685f05 = []byte{
	// 368 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xcf, 0x6e, 0xda, 0x40,
	0x10, 0xc6, 0x31, 0x20, 0x10, 0x43, 0x8b, 0xd4, 0xe9, 0xa1, 0x96, 0x55, 0x51, 0x64, 0xf5, 0xc0,
	0xa1, 0x35, 0x14, 0x4e, 0x15, 0x37, 0x2c, 0x25, 0xca, 0xd5, 0x44, 0x28, 0xca, 0x05, 0x19, 0x7b,
	0xe2, 0xac, 0x64, 0x7b, 0x9d, 0xfd, 0x93, 0xbc, 0x4c, 0x5e, 0x26, 0x6f, 0x16, 0xb1, 0x6b, 0x02,
	0x88, 0x44, 0xca, 0x6d, 0x77, 0xbe, 0xdf, 0xec, 0x7c, 0xf3, 0x2d, 0x7c, 0x91, 0x14, 0x4b, 0x5e,
	0x06, 0x95, 0xe0, 0x8a, 0x23, 0x48, 0x15, 0x2b, 0x26, 0x15, 0x4b, 0xb8, 0x37, 0xcc, 0x38, 0xcf,
	0x72, 0x9a, 0x18, 0x65, 0xab, 0xef, 0x26, 0x4f, 0x22, 0xae, 0x2a, 0x12, 0xd2, 0xb2, 0xde, 0x40,
	0xd0, 0x83, 0x26, 0xa9, 0xea, 0xbb, 0xff, 0xec, 0x00, 0x5e, 0x53, 0x5c, 0xac, 0xcc, 0x83, 0x32,
	0xb2, 0x2a, 0xfe, 0x80, 0xae, 0xa2, 0xb8, 0xd8, 0xb0, 0xd4, 0x75, 0x46, 0xce, 0xb8, 0x1d, 0x75,
	0x76, 0xd7, 0xab, 0x14, 0xa7, 0xd0, 0x96, 0x5c, 0x28, 0xb7, 0x39, 0x72, 0xc6, 0xfd, 0xd9, 0xcf,
	0xc0, 0x8e, 0x0b, 0xf6, 0xe3, 0x82, 0x95, 0x12, 0xac, 0xcc, 0xd6, 0x71, 0xae, 0x29, 0x32, 0x24,
	0x2e, 0xa0, 0xcf, 0xca, 0x24, 0xd7, 0x29, 0x6d, 0x12, 0x5d, 0xb9, 0x2d, 0xd3, 0xe8, 0x9d, 0x35,
	0x2e, 0x39, 0xcf, 0x6d, 0x1b, 0xd4, 0x78, 0xa8, 0x2b, 0x3f, 0x84, 0xef, 0x27, 0xee, 0x64, 0xc5,
	0x4b, 0x49, 0xf8, 0x07, 0xba, 0x36, 0x01, 0xe9, 0x3a, 0xa3, 0xd6, 0xb8, 0x3f, 0xc3, 0xe0, 0x90,
	0x41, 0x60, 0xe9, 0x68, 0x8f, 0xf8, 0x19, 0x74, 0x6c, 0x09, 0x07, 0xd0, 0x7c, 0xdb, 0xa8, 0xc9,
	0x52, 0x44, 0x68, 0x97, 0x71, 0x41, 0x66, 0x9b, 0x5e, 0x64, 0xce, 0xf8, 0x1f, 0x80, 0xc9, 0x4d,
	0xa2, 0x85, 0xa0, 0x52, 0x7d, 0xc2, 0x6e, 0x8f, 0xc9, 0xd0, 0xc2, 0xb3, 0x17, 0x07, 0xbe, 0xda,
	0x49, 0x2b, 0x12, 0x8f, 0x2c, 0x21, 0xbc, 0x01, 0xf7, 0x92, 0x54, 0x6d, 0xff, 0x82, 0x8b, 0x90,
	0x17, 0x15, 0x29, 0xa6, 0x18, 0x2f, 0xf1, 0xf7, 0xb9, 0xe7, 0x23, 0xb9, 0xfe, 0x09, 0xef, 0x9d,
	0xcd, 0xfc, 0xc6, 0xd4, 0xc1, 0x35, 0x7c, 0x3b, 0x79, 0x79, 0x17, 0x13, 0x0e, 0x8f, 0xe1, 0xf3,
	0x6f, 0xf5, 0x7e, 0x7d, 0xa8, 0xdb, 0x60, 0xfd, 0xc6, 0x72, 0x7e, 0xfb, 0x2f, 0x63, 0xea, 0x5e,
	0x6f, 0x83, 0x84, 0x17, 0x93, 0x03, 0x7e, 0x74, 0xfc, 0x6b, 0x52, 0x58, 0x1c, 0x0a, 0xdb, 0x8e,
	0xa9, 0xcc, 0x5f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x9d, 0xae, 0x1a, 0x23, 0x98, 0x02, 0x00, 0x00,
}
