// Code generated by protoc-gen-go. DO NOT EDIT.
// source: team_stats.proto

package statistico_proto_data

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TeamStatsResponse struct {
	HomeTeam             *TeamStats `protobuf:"bytes,1,opt,name=home_team,json=homeTeam,proto3" json:"home_team,omitempty"`
	AwayTeam             *TeamStats `protobuf:"bytes,2,opt,name=away_team,json=awayTeam,proto3" json:"away_team,omitempty"`
	TeamXg               *TeamXG    `protobuf:"bytes,3,opt,name=team_xg,json=teamXg,proto3" json:"team_xg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TeamStatsResponse) Reset()         { *m = TeamStatsResponse{} }
func (m *TeamStatsResponse) String() string { return proto.CompactTextString(m) }
func (*TeamStatsResponse) ProtoMessage()    {}
func (*TeamStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ae0d8dd82ded332, []int{0}
}

func (m *TeamStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamStatsResponse.Unmarshal(m, b)
}
func (m *TeamStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamStatsResponse.Marshal(b, m, deterministic)
}
func (m *TeamStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamStatsResponse.Merge(m, src)
}
func (m *TeamStatsResponse) XXX_Size() int {
	return xxx_messageInfo_TeamStatsResponse.Size(m)
}
func (m *TeamStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TeamStatsResponse proto.InternalMessageInfo

func (m *TeamStatsResponse) GetHomeTeam() *TeamStats {
	if m != nil {
		return m.HomeTeam
	}
	return nil
}

func (m *TeamStatsResponse) GetAwayTeam() *TeamStats {
	if m != nil {
		return m.AwayTeam
	}
	return nil
}

func (m *TeamStatsResponse) GetTeamXg() *TeamXG {
	if m != nil {
		return m.TeamXg
	}
	return nil
}

type TeamStat struct {
	FixtureId            uint64                `protobuf:"varint,1,opt,name=fixture_id,json=fixtureId,proto3" json:"fixture_id,omitempty"`
	Stat                 string                `protobuf:"bytes,2,opt,name=stat,proto3" json:"stat,omitempty"`
	Value                *wrappers.UInt32Value `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TeamStat) Reset()         { *m = TeamStat{} }
func (m *TeamStat) String() string { return proto.CompactTextString(m) }
func (*TeamStat) ProtoMessage()    {}
func (*TeamStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ae0d8dd82ded332, []int{1}
}

func (m *TeamStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamStat.Unmarshal(m, b)
}
func (m *TeamStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamStat.Marshal(b, m, deterministic)
}
func (m *TeamStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamStat.Merge(m, src)
}
func (m *TeamStat) XXX_Size() int {
	return xxx_messageInfo_TeamStat.Size(m)
}
func (m *TeamStat) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamStat.DiscardUnknown(m)
}

var xxx_messageInfo_TeamStat proto.InternalMessageInfo

func (m *TeamStat) GetFixtureId() uint64 {
	if m != nil {
		return m.FixtureId
	}
	return 0
}

func (m *TeamStat) GetStat() string {
	if m != nil {
		return m.Stat
	}
	return ""
}

func (m *TeamStat) GetValue() *wrappers.UInt32Value {
	if m != nil {
		return m.Value
	}
	return nil
}

type TeamStats struct {
	TeamId               uint64                `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	ShotsTotal           *wrappers.UInt32Value `protobuf:"bytes,2,opt,name=shots_total,json=shotsTotal,proto3" json:"shots_total,omitempty"`
	ShotsOnGoal          *wrappers.UInt32Value `protobuf:"bytes,3,opt,name=shots_on_goal,json=shotsOnGoal,proto3" json:"shots_on_goal,omitempty"`
	ShotsOffGoal         *wrappers.UInt32Value `protobuf:"bytes,4,opt,name=shots_off_goal,json=shotsOffGoal,proto3" json:"shots_off_goal,omitempty"`
	ShotsBlocked         *wrappers.UInt32Value `protobuf:"bytes,5,opt,name=shots_blocked,json=shotsBlocked,proto3" json:"shots_blocked,omitempty"`
	ShotsInsideBox       *wrappers.UInt32Value `protobuf:"bytes,6,opt,name=shots_inside_box,json=shotsInsideBox,proto3" json:"shots_inside_box,omitempty"`
	ShotsOutsideBox      *wrappers.UInt32Value `protobuf:"bytes,7,opt,name=shots_outside_box,json=shotsOutsideBox,proto3" json:"shots_outside_box,omitempty"`
	PassesTotal          *wrappers.UInt32Value `protobuf:"bytes,8,opt,name=passes_total,json=passesTotal,proto3" json:"passes_total,omitempty"`
	PassesAccuracy       *wrappers.UInt32Value `protobuf:"bytes,9,opt,name=passes_accuracy,json=passesAccuracy,proto3" json:"passes_accuracy,omitempty"`
	PassesPercentage     *wrappers.UInt32Value `protobuf:"bytes,10,opt,name=passes_percentage,json=passesPercentage,proto3" json:"passes_percentage,omitempty"`
	AttacksTotal         *wrappers.UInt32Value `protobuf:"bytes,11,opt,name=attacks_total,json=attacksTotal,proto3" json:"attacks_total,omitempty"`
	AttacksDangerous     *wrappers.UInt32Value `protobuf:"bytes,12,opt,name=attacks_dangerous,json=attacksDangerous,proto3" json:"attacks_dangerous,omitempty"`
	Goals                *wrappers.UInt32Value `protobuf:"bytes,13,opt,name=goals,proto3" json:"goals,omitempty"`
	Fouls                *wrappers.UInt32Value `protobuf:"bytes,14,opt,name=fouls,proto3" json:"fouls,omitempty"`
	Corners              *wrappers.UInt32Value `protobuf:"bytes,15,opt,name=corners,proto3" json:"corners,omitempty"`
	Offsides             *wrappers.UInt32Value `protobuf:"bytes,16,opt,name=offsides,proto3" json:"offsides,omitempty"`
	Possession           *wrappers.UInt32Value `protobuf:"bytes,17,opt,name=possession,proto3" json:"possession,omitempty"`
	YellowCards          *wrappers.UInt32Value `protobuf:"bytes,18,opt,name=yellow_cards,json=yellowCards,proto3" json:"yellow_cards,omitempty"`
	RedCards             *wrappers.UInt32Value `protobuf:"bytes,19,opt,name=red_cards,json=redCards,proto3" json:"red_cards,omitempty"`
	Saves                *wrappers.UInt32Value `protobuf:"bytes,20,opt,name=saves,proto3" json:"saves,omitempty"`
	Substitutions        *wrappers.UInt32Value `protobuf:"bytes,21,opt,name=substitutions,proto3" json:"substitutions,omitempty"`
	GoalKicks            *wrappers.UInt32Value `protobuf:"bytes,22,opt,name=goal_kicks,json=goalKicks,proto3" json:"goal_kicks,omitempty"`
	GoalAttempts         *wrappers.UInt32Value `protobuf:"bytes,23,opt,name=goal_attempts,json=goalAttempts,proto3" json:"goal_attempts,omitempty"`
	FreeKicks            *wrappers.UInt32Value `protobuf:"bytes,24,opt,name=free_kicks,json=freeKicks,proto3" json:"free_kicks,omitempty"`
	ThrowIns             *wrappers.UInt32Value `protobuf:"bytes,25,opt,name=throw_ins,json=throwIns,proto3" json:"throw_ins,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TeamStats) Reset()         { *m = TeamStats{} }
func (m *TeamStats) String() string { return proto.CompactTextString(m) }
func (*TeamStats) ProtoMessage()    {}
func (*TeamStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ae0d8dd82ded332, []int{2}
}

func (m *TeamStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamStats.Unmarshal(m, b)
}
func (m *TeamStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamStats.Marshal(b, m, deterministic)
}
func (m *TeamStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamStats.Merge(m, src)
}
func (m *TeamStats) XXX_Size() int {
	return xxx_messageInfo_TeamStats.Size(m)
}
func (m *TeamStats) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamStats.DiscardUnknown(m)
}

var xxx_messageInfo_TeamStats proto.InternalMessageInfo

func (m *TeamStats) GetTeamId() uint64 {
	if m != nil {
		return m.TeamId
	}
	return 0
}

func (m *TeamStats) GetShotsTotal() *wrappers.UInt32Value {
	if m != nil {
		return m.ShotsTotal
	}
	return nil
}

func (m *TeamStats) GetShotsOnGoal() *wrappers.UInt32Value {
	if m != nil {
		return m.ShotsOnGoal
	}
	return nil
}

func (m *TeamStats) GetShotsOffGoal() *wrappers.UInt32Value {
	if m != nil {
		return m.ShotsOffGoal
	}
	return nil
}

func (m *TeamStats) GetShotsBlocked() *wrappers.UInt32Value {
	if m != nil {
		return m.ShotsBlocked
	}
	return nil
}

func (m *TeamStats) GetShotsInsideBox() *wrappers.UInt32Value {
	if m != nil {
		return m.ShotsInsideBox
	}
	return nil
}

func (m *TeamStats) GetShotsOutsideBox() *wrappers.UInt32Value {
	if m != nil {
		return m.ShotsOutsideBox
	}
	return nil
}

func (m *TeamStats) GetPassesTotal() *wrappers.UInt32Value {
	if m != nil {
		return m.PassesTotal
	}
	return nil
}

func (m *TeamStats) GetPassesAccuracy() *wrappers.UInt32Value {
	if m != nil {
		return m.PassesAccuracy
	}
	return nil
}

func (m *TeamStats) GetPassesPercentage() *wrappers.UInt32Value {
	if m != nil {
		return m.PassesPercentage
	}
	return nil
}

func (m *TeamStats) GetAttacksTotal() *wrappers.UInt32Value {
	if m != nil {
		return m.AttacksTotal
	}
	return nil
}

func (m *TeamStats) GetAttacksDangerous() *wrappers.UInt32Value {
	if m != nil {
		return m.AttacksDangerous
	}
	return nil
}

func (m *TeamStats) GetGoals() *wrappers.UInt32Value {
	if m != nil {
		return m.Goals
	}
	return nil
}

func (m *TeamStats) GetFouls() *wrappers.UInt32Value {
	if m != nil {
		return m.Fouls
	}
	return nil
}

func (m *TeamStats) GetCorners() *wrappers.UInt32Value {
	if m != nil {
		return m.Corners
	}
	return nil
}

func (m *TeamStats) GetOffsides() *wrappers.UInt32Value {
	if m != nil {
		return m.Offsides
	}
	return nil
}

func (m *TeamStats) GetPossession() *wrappers.UInt32Value {
	if m != nil {
		return m.Possession
	}
	return nil
}

func (m *TeamStats) GetYellowCards() *wrappers.UInt32Value {
	if m != nil {
		return m.YellowCards
	}
	return nil
}

func (m *TeamStats) GetRedCards() *wrappers.UInt32Value {
	if m != nil {
		return m.RedCards
	}
	return nil
}

func (m *TeamStats) GetSaves() *wrappers.UInt32Value {
	if m != nil {
		return m.Saves
	}
	return nil
}

func (m *TeamStats) GetSubstitutions() *wrappers.UInt32Value {
	if m != nil {
		return m.Substitutions
	}
	return nil
}

func (m *TeamStats) GetGoalKicks() *wrappers.UInt32Value {
	if m != nil {
		return m.GoalKicks
	}
	return nil
}

func (m *TeamStats) GetGoalAttempts() *wrappers.UInt32Value {
	if m != nil {
		return m.GoalAttempts
	}
	return nil
}

func (m *TeamStats) GetFreeKicks() *wrappers.UInt32Value {
	if m != nil {
		return m.FreeKicks
	}
	return nil
}

func (m *TeamStats) GetThrowIns() *wrappers.UInt32Value {
	if m != nil {
		return m.ThrowIns
	}
	return nil
}

type TeamXG struct {
	Home                 *wrappers.FloatValue `protobuf:"bytes,1,opt,name=home,proto3" json:"home,omitempty"`
	Away                 *wrappers.FloatValue `protobuf:"bytes,2,opt,name=away,proto3" json:"away,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TeamXG) Reset()         { *m = TeamXG{} }
func (m *TeamXG) String() string { return proto.CompactTextString(m) }
func (*TeamXG) ProtoMessage()    {}
func (*TeamXG) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ae0d8dd82ded332, []int{3}
}

func (m *TeamXG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamXG.Unmarshal(m, b)
}
func (m *TeamXG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamXG.Marshal(b, m, deterministic)
}
func (m *TeamXG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamXG.Merge(m, src)
}
func (m *TeamXG) XXX_Size() int {
	return xxx_messageInfo_TeamXG.Size(m)
}
func (m *TeamXG) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamXG.DiscardUnknown(m)
}

var xxx_messageInfo_TeamXG proto.InternalMessageInfo

func (m *TeamXG) GetHome() *wrappers.FloatValue {
	if m != nil {
		return m.Home
	}
	return nil
}

func (m *TeamXG) GetAway() *wrappers.FloatValue {
	if m != nil {
		return m.Away
	}
	return nil
}

func init() {
	proto.RegisterType((*TeamStatsResponse)(nil), "statistico_proto_data.TeamStatsResponse")
	proto.RegisterType((*TeamStat)(nil), "statistico_proto_data.TeamStat")
	proto.RegisterType((*TeamStats)(nil), "statistico_proto_data.TeamStats")
	proto.RegisterType((*TeamXG)(nil), "statistico_proto_data.TeamXG")
}

func init() {
	proto.RegisterFile("team_stats.proto", fileDescriptor_2ae0d8dd82ded332)
}

var fileDescriptor_2ae0d8dd82ded332 = []byte{
	// 775 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x96, 0xdf, 0x6e, 0xf3, 0x34,
	0x18, 0xc6, 0x57, 0xe8, 0xba, 0xe6, 0x5d, 0xd7, 0xb5, 0x86, 0x6d, 0x66, 0x30, 0x98, 0x2a, 0x81,
	0x76, 0xd4, 0xa1, 0x4e, 0x42, 0x4c, 0x30, 0xc1, 0x0a, 0xb4, 0x54, 0x1c, 0x80, 0xba, 0x81, 0x76,
	0x82, 0x22, 0x37, 0x71, 0xba, 0xd0, 0x34, 0xce, 0x6c, 0x67, 0xed, 0xae, 0x87, 0xab, 0xe1, 0x26,
	0xb8, 0x16, 0xf4, 0xda, 0x4e, 0x27, 0xf4, 0x7d, 0xdf, 0xe6, 0xb3, 0xd6, 0x79, 0x7e, 0xcf, 0xfb,
	0xc7, 0x76, 0xde, 0x40, 0x47, 0x73, 0xb6, 0x0c, 0x95, 0x66, 0x5a, 0xf5, 0x0b, 0x29, 0xb4, 0x20,
	0x07, 0xf8, 0x27, 0x55, 0x3a, 0x8d, 0x44, 0x68, 0x56, 0xc2, 0x98, 0x69, 0x76, 0xfc, 0xe9, 0x5c,
	0x88, 0x79, 0xc6, 0xcf, 0xcd, 0xd2, 0xac, 0x4c, 0xce, 0x57, 0x92, 0x15, 0x05, 0x97, 0x0e, 0x3b,
	0x6e, 0x4b, 0xfe, 0x50, 0x72, 0x55, 0xd9, 0xf4, 0xfe, 0xa9, 0x41, 0xf7, 0x96, 0xb3, 0xe5, 0x0d,
	0x5a, 0x4f, 0xb9, 0x2a, 0x44, 0xae, 0x38, 0xb9, 0x82, 0xe0, 0x5e, 0x2c, 0x79, 0x88, 0x51, 0x69,
	0xed, 0xb4, 0x76, 0xb6, 0x3b, 0x38, 0xed, 0xbf, 0x35, 0x60, 0xff, 0x19, 0x6e, 0x22, 0x82, 0x7f,
	0x11, 0x67, 0x2b, 0xf6, 0x64, 0xf1, 0xf7, 0x7c, 0x71, 0x44, 0x0c, 0xfe, 0x15, 0xec, 0x98, 0x72,
	0xd7, 0x73, 0xfa, 0xbe, 0x81, 0x4f, 0x5e, 0x80, 0xef, 0xc6, 0xd3, 0x06, 0xaa, 0xef, 0xe6, 0xbd,
	0x07, 0x68, 0x56, 0x76, 0xe4, 0x04, 0x20, 0x49, 0xd7, 0xba, 0x94, 0x3c, 0x4c, 0x63, 0x53, 0x42,
	0x7d, 0x1a, 0xb8, 0x95, 0x49, 0x4c, 0x08, 0xd4, 0xd1, 0xd2, 0x24, 0x17, 0x4c, 0xcd, 0x6f, 0x32,
	0x80, 0xed, 0x47, 0x96, 0x95, 0xdc, 0x05, 0xfd, 0xa4, 0x6f, 0x5b, 0xd9, 0xaf, 0x5a, 0xd9, 0xff,
	0x7d, 0x92, 0xeb, 0x8b, 0xc1, 0x1f, 0xa8, 0x99, 0x5a, 0x69, 0xef, 0xef, 0x16, 0x04, 0x9b, 0x12,
	0xc8, 0x91, 0x4b, 0x7c, 0x13, 0xd1, 0x64, 0x36, 0x89, 0xc9, 0x15, 0xec, 0xaa, 0x7b, 0xa1, 0x55,
	0xa8, 0x85, 0x66, 0x99, 0x6b, 0xc9, 0xcb, 0x01, 0xc0, 0x00, 0xb7, 0xa8, 0x27, 0xdf, 0xc3, 0x9e,
	0xc5, 0x45, 0x1e, 0xce, 0x05, 0xcb, 0xbc, 0x32, 0xb4, 0x11, 0x7f, 0xcd, 0xc7, 0x82, 0x65, 0x64,
	0x08, 0x6d, 0xe7, 0x90, 0x24, 0xd6, 0xa2, 0xee, 0x61, 0xd1, 0xb2, 0x16, 0x49, 0x62, 0x3c, 0xae,
	0xab, 0x2c, 0x66, 0x99, 0x88, 0x16, 0x3c, 0xa6, 0xdb, 0xde, 0x16, 0x43, 0x4b, 0x90, 0x11, 0x74,
	0xac, 0x45, 0x9a, 0xab, 0x34, 0xe6, 0xe1, 0x4c, 0xac, 0x69, 0xc3, 0xc3, 0xc5, 0x26, 0x3f, 0x31,
	0xd0, 0x50, 0xac, 0xc9, 0xcf, 0xd0, 0x75, 0xe5, 0x94, 0x7a, 0x63, 0xb4, 0xe3, 0x61, 0xb4, 0x6f,
	0x2b, 0xb2, 0x14, 0x3a, 0x7d, 0x07, 0xad, 0x82, 0x29, 0xc5, 0xab, 0xad, 0x69, 0xfa, 0x74, 0xd6,
	0x12, 0x76, 0x6f, 0x7e, 0x82, 0x7d, 0x67, 0xc0, 0xa2, 0xa8, 0x94, 0x2c, 0x7a, 0xa2, 0x81, 0x4f,
	0x45, 0x16, 0xba, 0x76, 0x0c, 0x99, 0x40, 0xd7, 0xd9, 0x14, 0x5c, 0x46, 0x3c, 0xd7, 0x6c, 0xce,
	0x29, 0x78, 0x18, 0x75, 0x2c, 0xf6, 0xdb, 0x86, 0xc2, 0x7d, 0x62, 0x5a, 0xb3, 0x68, 0x51, 0xd5,
	0xb4, 0xeb, 0xb3, 0x4f, 0x0e, 0xb1, 0x45, 0x4d, 0xa0, 0x5b, 0x59, 0xc4, 0x2c, 0x9f, 0x73, 0x29,
	0x4a, 0x45, 0x5b, 0x3e, 0xd9, 0x38, 0xec, 0xc7, 0x8a, 0xc2, 0x5b, 0x85, 0xe7, 0x4d, 0xd1, 0x3d,
	0x9f, 0x5b, 0x65, 0xa4, 0xc8, 0x24, 0xa2, 0xcc, 0x14, 0x6d, 0xfb, 0x30, 0x46, 0x8a, 0x2f, 0x8d,
	0x48, 0xc8, 0x9c, 0x4b, 0x45, 0xf7, 0x3d, 0xa8, 0x4a, 0x4c, 0xbe, 0x86, 0xa6, 0x48, 0x12, 0x3c,
	0x0e, 0x8a, 0x76, 0x3c, 0xc0, 0x8d, 0x9a, 0x7c, 0x0b, 0x50, 0x08, 0xec, 0xbd, 0x4a, 0x45, 0x4e,
	0xbb, 0x3e, 0x77, 0xfa, 0x59, 0x8f, 0x07, 0xef, 0x89, 0x67, 0x99, 0x58, 0x85, 0x11, 0x93, 0xb1,
	0xa2, 0xc4, 0xe7, 0xe0, 0x59, 0xe2, 0x07, 0x04, 0xc8, 0x25, 0x04, 0x92, 0xc7, 0x8e, 0xfe, 0xc0,
	0x27, 0x73, 0xc9, 0x63, 0x8b, 0x0e, 0x60, 0x5b, 0xb1, 0x47, 0xae, 0xe8, 0x87, 0x3e, 0xfd, 0x35,
	0x52, 0x32, 0x84, 0x3d, 0x55, 0xce, 0x94, 0x4e, 0x75, 0xa9, 0x53, 0x91, 0x2b, 0x7a, 0xe0, 0xc1,
	0xfe, 0x1f, 0x21, 0xdf, 0x00, 0xe0, 0x06, 0x87, 0x8b, 0x34, 0x5a, 0x28, 0x7a, 0xe8, 0x61, 0x10,
	0xa0, 0xfe, 0x17, 0x94, 0xe3, 0xb1, 0x36, 0x30, 0xd3, 0x9a, 0x2f, 0x0b, 0xad, 0xe8, 0x91, 0xcf,
	0xb1, 0x46, 0xe4, 0xda, 0x11, 0x18, 0x3f, 0x91, 0x9c, 0xbb, 0xf8, 0xd4, 0x27, 0x3e, 0xea, 0x6d,
	0xfc, 0x4b, 0x08, 0xf4, 0xbd, 0x14, 0x2b, 0x7c, 0x77, 0xd1, 0x8f, 0x7c, 0xfa, 0x6d, 0xe4, 0x93,
	0x5c, 0xf5, 0xfe, 0x82, 0x86, 0x1d, 0x55, 0xe4, 0x1c, 0xea, 0x38, 0x25, 0xdd, 0x4c, 0xfd, 0xf8,
	0x0d, 0x7e, 0x94, 0x09, 0xa6, 0x2d, 0x6e, 0x84, 0x08, 0xe0, 0x5c, 0x74, 0x23, 0xe3, 0x65, 0x00,
	0x85, 0x83, 0x7f, 0x6b, 0xd0, 0xd9, 0x4c, 0xa4, 0x1b, 0x2e, 0x1f, 0xd3, 0x88, 0x93, 0x05, 0x1c,
	0x8e, 0xb9, 0xde, 0x2c, 0x8f, 0x84, 0x1c, 0xd9, 0x51, 0x48, 0x3e, 0x7f, 0xc7, 0x68, 0x75, 0xcf,
	0xa7, 0xf6, 0x6b, 0xe1, 0xf8, 0xec, 0xd5, 0xf1, 0xed, 0x3e, 0x1d, 0x7a, 0x5b, 0xe4, 0x4f, 0x68,
	0x8f, 0xb9, 0xc6, 0xd5, 0x91, 0x90, 0x66, 0xa0, 0x7f, 0xf1, 0x0a, 0x5d, 0x45, 0xf9, 0xec, 0x15,
	0x5d, 0x6f, 0xeb, 0xcb, 0xda, 0xac, 0x61, 0x1e, 0x5c, 0xfc, 0x17, 0x00, 0x00, 0xff, 0xff, 0x61,
	0x78, 0x31, 0x96, 0x13, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TeamStatsServiceClient is the client API for TeamStatsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TeamStatsServiceClient interface {
	GetTeamStatsForFixture(ctx context.Context, in *FixtureRequest, opts ...grpc.CallOption) (*TeamStatsResponse, error)
	GetStatForTeam(ctx context.Context, in *TeamStatRequest, opts ...grpc.CallOption) (TeamStatsService_GetStatForTeamClient, error)
}

type teamStatsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTeamStatsServiceClient(cc grpc.ClientConnInterface) TeamStatsServiceClient {
	return &teamStatsServiceClient{cc}
}

func (c *teamStatsServiceClient) GetTeamStatsForFixture(ctx context.Context, in *FixtureRequest, opts ...grpc.CallOption) (*TeamStatsResponse, error) {
	out := new(TeamStatsResponse)
	err := c.cc.Invoke(ctx, "/statistico_proto_data.TeamStatsService/GetTeamStatsForFixture", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamStatsServiceClient) GetStatForTeam(ctx context.Context, in *TeamStatRequest, opts ...grpc.CallOption) (TeamStatsService_GetStatForTeamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TeamStatsService_serviceDesc.Streams[0], "/statistico_proto_data.TeamStatsService/GetStatForTeam", opts...)
	if err != nil {
		return nil, err
	}
	x := &teamStatsServiceGetStatForTeamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TeamStatsService_GetStatForTeamClient interface {
	Recv() (*TeamStat, error)
	grpc.ClientStream
}

type teamStatsServiceGetStatForTeamClient struct {
	grpc.ClientStream
}

func (x *teamStatsServiceGetStatForTeamClient) Recv() (*TeamStat, error) {
	m := new(TeamStat)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TeamStatsServiceServer is the server API for TeamStatsService service.
type TeamStatsServiceServer interface {
	GetTeamStatsForFixture(context.Context, *FixtureRequest) (*TeamStatsResponse, error)
	GetStatForTeam(*TeamStatRequest, TeamStatsService_GetStatForTeamServer) error
}

// UnimplementedTeamStatsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTeamStatsServiceServer struct {
}

func (*UnimplementedTeamStatsServiceServer) GetTeamStatsForFixture(ctx context.Context, req *FixtureRequest) (*TeamStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTeamStatsForFixture not implemented")
}
func (*UnimplementedTeamStatsServiceServer) GetStatForTeam(req *TeamStatRequest, srv TeamStatsService_GetStatForTeamServer) error {
	return status.Errorf(codes.Unimplemented, "method GetStatForTeam not implemented")
}

func RegisterTeamStatsServiceServer(s *grpc.Server, srv TeamStatsServiceServer) {
	s.RegisterService(&_TeamStatsService_serviceDesc, srv)
}

func _TeamStatsService_GetTeamStatsForFixture_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FixtureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamStatsServiceServer).GetTeamStatsForFixture(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/statistico_proto_data.TeamStatsService/GetTeamStatsForFixture",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamStatsServiceServer).GetTeamStatsForFixture(ctx, req.(*FixtureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamStatsService_GetStatForTeam_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TeamStatRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TeamStatsServiceServer).GetStatForTeam(m, &teamStatsServiceGetStatForTeamServer{stream})
}

type TeamStatsService_GetStatForTeamServer interface {
	Send(*TeamStat) error
	grpc.ServerStream
}

type teamStatsServiceGetStatForTeamServer struct {
	grpc.ServerStream
}

func (x *teamStatsServiceGetStatForTeamServer) Send(m *TeamStat) error {
	return x.ServerStream.SendMsg(m)
}

var _TeamStatsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "statistico_proto_data.TeamStatsService",
	HandlerType: (*TeamStatsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTeamStatsForFixture",
			Handler:    _TeamStatsService_GetTeamStatsForFixture_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetStatForTeam",
			Handler:       _TeamStatsService_GetStatForTeam_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "team_stats.proto",
}
